name: Node.js CI

on:
  push:
    branches:
      - '**'
    paths:
      - '__tests__/**'
      - 'src/**'
      - '.github/workflows/main.yml'
      - 'package.json'
    tags:
      - "v*"
  pull_request:
    branches: [main]
    paths: ['package.json']

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 17.x, 18.x, 19.x]

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Restore NPM cache
      uses: actions/cache@v3
      continue-on-error: true
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}

    - run: npm ci

    - run: npm run lint

    - run: npm run test

    - name: Coverage to Deepsource
      if: ${{ env.DEEPSOURCE_DSN != null && matrix.node-version == '18.x' }}
      run: |
        curl https://deepsource.io/cli | sh
        ./bin/deepsource report --analyzer test-coverage --key javascript --value-file ./coverage/cobertura-coverage.xml
      env: 
        DEEPSOURCE_DSN: ${{ secrets.DEEPSOURCE_DSN }}

    - run: npm run build:new

    - name: Compare the expected and actual lib/ directories
      run: |
        if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then
          echo "Detected uncommitted changes after build.  See status below:"
          git diff
          exit 1
        fi

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    # only run if tagged
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Restore NPM cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci

      - run: npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - run: npm pack

      - uses: actions/upload-artifact@v3
        with:
          name: npm-build
          path: '**.tgz'